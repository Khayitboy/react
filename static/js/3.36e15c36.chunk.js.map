{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Post/post_img.jpg","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","style","post__item","post__img","src","post_img","alt","message","likesCount","Posts","memo","postsElem","posts","map","elem","AddPostFormRedux","onSubmit","formData","addPost","newPostText","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","id","name","validate","required","PostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","onDoubleClick","ProfileInfo","profile","description","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.36e15c36.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect  to=\"/login\" />\r\n            return <Component  {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__item\":\"Post_post__item__3AxiJ\",\"post__img\":\"Post_post__img__1YiI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1OkRF\"};","export default __webpack_public_path__ + \"static/media/post_img.26865db2.jpg\";","import React from 'react';\r\nimport post_img from './post_img.jpg';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.post__item}>\r\n            <div className={style.post__img}>\r\n                <img src={post_img} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n                <p>{props.message}</p>\r\n                <p>Likes <span>{props.likesCount}</span></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst Posts = React.memo((props) => {\r\n    \r\n    let postsElem = props.posts.map((elem) => <Post likesCount={elem.likesCount} message={elem.message} />)\r\n\r\n    let addPost2 = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"posts\">\r\n            <div className=\"posts__form\">\r\n                <AddPostFormRedux onSubmit={addPost2} />\r\n            </div>\r\n            <h2>My posts</h2>\r\n            <div className=\"posts__container\">\r\n                {postsElem}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength = maxLengthCreator(20);\r\n\r\nconst addPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field component={Textarea} id=\"post__form\" name=\"newPostText\" validate={[required, maxLength]} />\r\n            <button>Create Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form:\"postAddMessageForm\"})(addPostForm)\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText)); \r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);  \r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode \r\n            ?<div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n            </div> \r\n            :<div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}  type=\"text\" value={status}  />\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={style.description}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}